# Credit: muzybaba
#!/data/data/com.termux/files/usr/bin/bash -e

VERSION=2024022001
BASE_URL=https://kali.download/nethunter-images/kali-2024.2/rootfs/
USERNAME=kali

function unsupported_arch() {
    printf "${red}"
    echo "[*] Unsupported Architecture\n\n"
    printf "${reset}"
    exit 1
}

function require_subscription() {
    echo -e "${light_cyan}[!] This script was created by muzybaba."
    echo "[+] Please subscribe to 'muzybaba' before proceeding."
    read -p "[?] Have you subscribed? (yes/no): " REPLY
    if [[ ! "$REPLY" =~ ^[Yy][Ee][Ss]$ ]]; then
        echo "${red}[!] Subscription required to use this script. Exiting.${reset}"
        exit 1
    fi
}

function retry_download() {
    local url=$1
    local output=$2
    local attempts=3

    for ((i = 1; i <= attempts; i++)); do
        wget ${EXTRA_ARGS} --continue "$url" -O "$output" && return 0
        echo "${red}[!] Download attempt $i failed. Retrying...${reset}"
    done

    echo "${red}[!] Failed to download $output after $attempts attempts. Exiting.${reset}"
    exit 1
}

function get_url() {
    ROOTFS_URL="${BASE_URL}/${IMAGE_NAME}"
    SHA_URL="${BASE_URL}/${SHA_NAME}"
}

function get_rootfs() {
    unset KEEP_IMAGE
    if [ -f ${IMAGE_NAME} ]; then
        if ask "Existing image file found. Delete and download a new one?" "N"; then
            rm -f ${IMAGE_NAME}
        else
            printf "${yellow}[!] Using existing rootfs archive${reset}\n"
            KEEP_IMAGE=1
            return
        fi
    fi

    printf "${blue}[*] Downloading rootfs...${reset}\n\n"
    get_url
    retry_download "$ROOTFS_URL" "$IMAGE_NAME"
}

function get_sha() {
    if [ -z $KEEP_IMAGE ]; then
        printf "\n${blue}[*] Downloading SHA checksum... ${reset}\n\n"
        get_url
        retry_download "$SHA_URL" "$SHA_NAME"
    fi
}

function verify_sha() {
    if [ -z $KEEP_IMAGE ]; then
        printf "\n${blue}[*] Verifying rootfs integrity...${reset}\n\n"
        sha512sum -c $SHA_NAME || {
            printf "${red}[!] Rootfs is corrupted. Please try again.${reset}\n"
            exit 1
        }
    fi
}

##################################
##              Main            ##

# Add some colors
red='\033[1;31m'
green='\033[1;32m'
yellow='\033[1;33m'
blue='\033[1;34m'
light_cyan='\033[1;96m'
reset='\033[0m'

EXTRA_ARGS=""
if [[ ! -z $1 ]]; then
    EXTRA_ARGS=$1
    if [[ $EXTRA_ARGS != "--no-check-certificate" ]]; then
        EXTRA_ARGS=""
    fi
fi

cd $HOME
require_subscription
print_banner
get_arch
set_strings
prepare_fs
check_dependencies
get_rootfs
get_sha
verify_sha
extract_rootfs
create_launcher
cleanup

printf "\n${green}[=] Kali NetHunter for Termux installed successfully.${reset}\n"
printf "${green}[+] Subscribe to 'muzybaba' for more cool scripts!${reset}\n"